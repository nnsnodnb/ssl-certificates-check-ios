default_platform(:ios)

platform :ios do
  # Match
  desc "Fetch Provisioning Profile & Apple Development Certificate"
  lane :setup_development_certificates do
    keychain
    match(
      type: "development",
    )
  end

  desc "Fetch Provisioning Profile & Apple Distribution Certificate"
  lane :setup_adhoc_certificates do
    keychain
    match(
      type: "adhoc",
    )
  end

  desc "Fetch Provisioning Profile & Apple Distribution Certificate"
  lane :setup_appstore_certificates do
    keychain
    match(
      type: "appstore",
    )
  end

  # Gym
  desc "Gym for AdHoc"
  lane :adhoc do
    setup_adhoc_certificates

    gym(
      export_method: "ad-hoc",
      scheme: "AdHoc",
      xcargs: "MARKETING_VERSION='#{generate_adhoc_marketing_version}'",
    )
  end

  desc "Gym for AppStore"
  lane :release do
    setup_appstore_certificates

    gym(
      export_method: "app-store",
      scheme: "Production",
    )
  end

  # Private
  desc "Create temporary Keychain for CI"
  private_lane :keychain do
    if is_ci
      create_keychain(
        name: ENV["MATCH_KEYCHAIN_NAME"],
        default_keychain: true,
        unlock: true,
        timeout: 0,
        lock_when_sleeps: true,
        password: ENV["MATCH_KEYCHAIN_PASSWORD"],
        add_to_search_list: true,
      )
    end
  end

  desc "Generate MARKETING_VERSION for AdHoc"
  private_lane :generate_adhoc_marketing_version do
    version = get_version_number(
      xcodeproj: "App/AdHoc/AdHoc.xcodeproj",
      target: "AdHoc",
    )
    short_hash = last_git_commit[:abbreviated_commit_hash]
    "#{version}-#{short_hash}"
  end
end
